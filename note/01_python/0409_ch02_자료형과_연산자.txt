	※ raw 데이터
	2. 간략한 문법(정규표현식)
		\d : 숫자와 매치, [0-9]와 동일
		\D : 숫자가 아닌 것
		\w : 영문자 or 숫자, [a-zA-Z0-9] ([] : 괄호 안의 범위 중 하나)
		\W : 영문자 or 숫자가 아닌 문자
		. : 아무 문자 하나
		\. : .(dot) 문자
		\- : - 문자
		{2, 4} : 2~4회 반복 (반드시 앞의 수가 뒤의 수보다 작아야 함)
		{4} : 4회 반복
		{2, } : 2회 이상 반복
		+ : 1회 이상 반복
		* : 0회 이상 반복
		? : 0 or 1회 반복

	ex. 전화번호 : 02-777-7894 / 010-9999-9999
		02-898-7877 , 010-7897-7897 , 02)777-7777 , 01099998888 , 010 9999 1234 
		"[0-9]{2,3}[\-) .]?[0-9]{3,4}[\- .]?[0-9]{4}"

	ex2. 이메일 : abc12@naver.com / abc123@0to7.co.kr / abc123@한국.co.kr
		"\w{3,}@[a-zA-Z0-9가-힣]+(\.[a-zA-Z]+){1,2}"

	※ 문자열 슬라이싱
		문자변수[from:stop] : from부터 stop앞까지 추출
		문자변수[from:stop:step] : from부터 stop앞까지 step씩 전진하면서 추출
    		step 생략 시 기본값 1
    		from 생략 시 처음부터
   		stop 생략 시 끝까지
    3.3 논리형(True / False)
		# False로 간주되는 것 : 0, '', ""(빈 스트링), None(없다 비슷한 개념), [](빈 리스트), (), {}
		# False 이외의 모든 값은 다 True(" "또한 \s, True)
    3.4 자료형 확인 및 형변환 함수
		- type(변수)
		- isinstance(변수, 타입)
		- int()   : 정수형으로 변환
		- float() : 실수형으로 변환
		- str()   : 문자형으로 변환
		- bool()  : 논리형으로 변환

		파이썬 기본 자료형(정리)
			1. 숫자 - int, float, complex
			2. 문자 - str, 문자슬라이싱, raw데이터(정규표현식, 파일경로)
			3. 논리 - False로 판별되는 경우
4절. 포맷팅
    4.1 문자열의 출력 형식 지정
		print("%s님의 나이는 %3d살입니다"%(name, age)) # %s : 문자, %d : 정수, %f : 실수
		print(f"{name}님의 나이는 {age}살입니다") # 차순위 이용 빈도
		print("{}님의 나이는 {:3d}살입니다".format(name, age)) # 제일 많이 이용
    4.2 format() 문법
		"{[인덱스]:[정렬방식][자릿수][타입]}".format(변수) 
    		#인덱스가 없으면 0번째부터 순서대로
    		# 인덱스 : format 함수 안의 매개변수의 순서
    		# 정렬방식 : <(왼쪽정렬), >(오른쪽정렬), ^(중앙정렬)
    		# 정수자릿수 : 출력될 자릿수 d. 변수 내용보다 작은 자릿수가 지정되면 자릿수 무시
    		# 실수자릿수 : 출력될 자릿수.소수점이하 출력 자릿수f
    		# 문자자릿수 : 전체확보될자릿수[.변수중출력할자릿수]s
    		# 타입 : d(10진수 정수), b(2진수), x(16진수), f(실수), s(문자)
    		# 공백대체문자를 쓸 경우 정렬방식을 반드시 기입해야 함  
		# + : 부호를 출력
		# = : 부호를 맨 앞에 출력
	f"{age}살 {name}님 반갑습니다"
	"{}살 {}님 반갑습니다".format(age, name)
	"{[인덱스]:[공백대체문자][정렬방식][자릿수][타입]}".format(변수)
    4.3 날짜 출력
		import re # 날짜/시간 라이브러리 (함수 매우 많음) ->파일을 여러개로 나눠 폴더 단위로 배포
		from datetime import datetime # 원하는 폴더 내의 파일만 메모리에 올림

		print("{:%Y년%m월%d일 %p %I시 %M분 %S초}".format(now)) # S(초) 반드시 대문자
		now.strftime("%Y년%m월%d일 %p %I시 %M분 %S초")