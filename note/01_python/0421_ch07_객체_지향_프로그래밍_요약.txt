1~3절
**객체를 이용하면 객체에 정보를 저장하고, 그 정보를 이용해서 어떤 기능을 수행할 수 있다**
**객체 = 데이터(변수 : 객체마다 고유의 값) + 기능(메소드, 함수)**

**그 객체를 만들기 위한 틀 : 클래스**
```
    class 클래스명:
        '독스트링'
        클래스 변수명 = 값
        def __init__(self, [객체멤버를 초기화할 변수=값, ...] :
            self.인스턴스(일반)변수=값
            객체를 생성할 떄 객체 멤버변수의 초기화
        def method(self) :
            인스턴스 메소드(일반함수)의 매개변수는 self를 반드시 포함
        @classmethod
        def classmethod(cls):
            코드
        @staticmethod
        def staticmethod() :
            코드
    객체변수 = 클래스명()
    객채변수.method()
    클래스명.classmethod()
    클래스명.staticmethod()
4절 상속과 재정의
	- 클래스를 재사용
	- 상속을 이용하면 부모클래스의 모든 속성을 자식클래스로 물려줄 수 있음
	- 문법 : class 자식클래스명(부모클래스명) :
	
	# override : 함수의 재정의(부모클래스의 함수를 자식클래서에서 다시 정의)
	#            부모클래스의 함수명과 매개변수 개수가 동일
	# overloading : 함수의 중복 정의(같은 이름의 함수를 매개변수의 개수를 달리해서 정의) - python에선 불가능

## 정적변수(static 변수)
- 여러 객체들 사이에 데이터를 공유하고 싶을때 사용
- static 변수 앞에 under score 2개(__)를 붙이면 "클래스명._클래스명__static 변수명" 형식으로 참조
- 클래스변수는 외부에서 바로 접근 가능
- static변수는 외부에서 바로 접근하는 것을 방지
- static변수는 클래스 내부에서만 접근하도록 하려는 의도