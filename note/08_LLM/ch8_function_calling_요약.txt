
[문법 요약 - ch8_function_calling.ipynb]

1. import 및 설정
- from openai import OpenAI : OpenAI API 사용
- from dotenv import load_dotenv : 환경변수 로딩 (.env)
- import requests : 외부 API 호출용
- from IPython.display import display, HTML : 주피터 노트북 스타일 설정

2. 함수 정의
def get_weather(latitude, longitude):
    - 위도/경도 기반으로 외부 날씨 API 호출
    - 현재 온도 정보(섭씨) 반환

3. tools 스키마 정의 (Function Calling용)
tools = [{
    "type": "function",
    "function": {
        "name": "get_weather",
        "description": "...",
        "parameters": {
            "type": "object",
            "properties": {
                "latitude": {"type": "number"},
                "longitude": {"type": "number"}
            },
            "required": ["latitude", "longitude"],
            "additionalProperties": False
        }
    },
    "strict": True
}]

4. messages 구성
messages = [{"role": "user", "content": "오늘 서울 날씨 어때요?"}]

5. GPT 호출 및 tool_calls 확인
completion = client.chat.completions.create(
    model="gpt-4.1-nano",
    messages=messages,
    tools=tools
)

tool_calls = completion.choices[0].message.tool_calls

6. 실제 함수 호출
for tool_call in tool_calls:
    func_name = tool_call.function.name
    args = json.loads(tool_call.function.arguments)
    result = get_weather(args['latitude'], args['longitude'])

7. tool 응답 메시지 구성
messages.append({
    "role": "tool",
    "tool_call_id": tool_call.id,
    "content": str(result)
})

8. GPT의 후속 응답 생성
completion2 = client.chat.completions.create(
    model="gpt-4.1-nano",
    messages=messages,
    tools=tools
)
